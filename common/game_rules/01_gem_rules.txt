#####################################################################################################################
# Hello Modder, or Player trying to fix things:																		#
#OR = {																												#
# is_geoloid = yes																									#
# all other codnditions																								#
#}																													#
# This is my way of including gems in the pops that can be assembled.												#
# Should another mod break this first add The Merger of Rules mod to see if that fixes it. Otherwise, read on		#
# My rule addition is: "is_geoloid = yes" all that is required is that is stands alone in OR = { [here] } function	#
# 																													#
#####################################################################################################################
# Checks if a species uses bonus_growth modifier
# This = Species
# Root = Planet
species_uses_bonus_growth = {
	OR = {
		is_geoloid = yes #custom trait/trigger for the [Homeworld Gems]
		AND = {
			is_sapient = yes
			is_robotic_species = no
			has_population_control = {
				type = no
				country = root.owner
			}
			NAND = {
				root = { has_modifier = slave_colony }
				NOT = { has_citizenship_type = { type = citizenship_slavery country = root.owner } }
			}
			NOR = {
				has_citizenship_type = {
					type = citizenship_protected_drone
					country = root.owner
				}
				has_citizenship_type = {
					type = citizenship_symbiotic_drone
					country = root.owner
				}
				has_citizenship_type = {
					type = citizenship_exploited_drone
					country = root.owner
				}
			}
			NOT = { has_species_flag = nivlac_no_procreation }
			if = {
				limit = {
					has_infertile_clone_soldier_trait = yes
				}
				root = {
					check_variable = { which = clone_pops_missing_per_vat value > 0 }
				}
			}
			if = {
				limit = {
					has_cybernetic_creed_trait = yes
				}
				NOT = {
					root = {
						any_owned_species = {
							has_population_control = { country = root.owner type = no }
							is_robotic_species = no
							has_cybernetic_creed_trait = no
						}
					}
				}
			}
		}
	}
}