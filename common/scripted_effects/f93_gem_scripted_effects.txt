create_gem_empire_normal = {
	create_species = {
		class = "GEO"
		portrait = "gem"
		name = "PRESCRIPTED_species_name_gem"
		plural = "PRESCRIPTED_species_plural_gem"
		adjective = "PRESCRIPTED_species_adjective_gem"
		name_list = "GEO1"
		immortal = yes
		traits = {
			trait = "trait_geoloid"
			trait = "trait_gem_holobody"
			trait = "trait_gem_hardness"
			trait = "trait_gem_unquestionable"
			trait = "trait_gem_donteat"
			trait = "trait_gem_static"
		}
	}
	event_target:gem_spawn_location = {
		create_country = {
			name = "EMPIRE_gem_invaders"
			adjective = "PRESCRIPTED_adjective_gem"
			ship_prefix = "PRESCRIPTED_ship_prefix_gem"
			authority = "auth_imperial"
			type = default
			origin = origin_geoform
			civics = {
				civic = civic_tetrarchy
				civic = civic_corvee_system
			}
			species = last_created_species
			ethos = {
				ethic = "ethic_fanatic_authoritarian"
				ethic = "ethic_xenophobe"
			}
			flag = {
				icon = {
					category = "gem"
					file = "gemblem.dds"
				}
				background = {
					category = "backgrounds"
					file = "v.dds"
				}
				colors = {
					"turquoise"
					"grey"
					"null"
					"null"
				}
			}
			effect = {
				##Add resources
				add_resource = { minerals = 1500 }
				add_resource = { energy = 1000 }
				add_resource = { food = 100 }
				add_resource = { consumer_goods = 200 }
				add_resource = { alloys = 100 }
				add_resource = { influence = 100 }
				add_resource = { unity = 400 }
				add_modifier = {
					modifier = gem_ai_helper
					days = 7200
				}
				##Copy technology
				copy_techs_from = {
					target = root
					except = {
						# Horizon Signal
						tech_akx_worm_1
						tech_akx_worm_2
						tech_akx_worm_3
					}
				}
				country_event = { id = gem_era.1 days = 1}
			}
		}
		create_colony = {
			owner = last_created_country
			species = last_created_species
		}
		while = {
			count = 1000
			create_pop_group = { species = last_created_species }
		}
		set_capital = yes
		f93_seed_gem_planet_with_stuff = yes
		remove_building = building_colony_shelter
		if = { limit = { NOT = { has_building = building_capital } } add_building = building_capital }
		
		add_building = building_research_lab_1
		solar_system = {
			every_fleet_in_system = {
				kill_leader = { show_notification = no }
				set_owner = last_created_country
			}
		}
	}
}

f93_seed_gem_planet_with_stuff = {
	set_planet_flag = planet_had_court_before
	random_owned_pop_job = {
		limit = { has_job_type = gem_unemployment }
		kill_assigned_pop_amount = {
			percentage = 0.95
		}
	}
	set_variable = { which = gem_pops_made value = trigger:gem_pop_amount }
	owner_main_species = {
		set_habitability_trait = { trait = trait_pc_gem_preference }
	}
	every_deposit = {
		limit = {
			OR = {
				has_deposit_category = deposit_cat_food
				has_deposit_category = deposit_cat_energy
				has_deposit_category = deposit_cat_minerals
			}
		}
		remove_deposit = yes
	}
	# 3 + 3 energy               
	add_deposit = d_geothermal_vent
	add_deposit = d_geothermal_vent
	
	if = {
		limit = {
			exists = orbit
			orbit = { has_planet_flag = planet_earth }
		}
		remove_deposit = d_geothermal_vent
		remove_deposit = d_geothermal_vent
	}
	# 8 mining
	add_deposit = d_space_mining
	add_deposit = d_space_mining
	
	# 0 farming 
	
	# # 4 kindargarden
	add_deposit = d_kindergarten
	add_deposit = d_kindergarten
	add_deposit = d_kindergarten
	
	add_deposit = d_homeworld_special
	
	set_planet_flag = gem_has_kindergarten
	
	set_planet_flag = grand_court
	add_modifier = { modifier = pm_gem_white_court mult = value:white_mod_scale }
	add_modifier = { modifier = pm_gem_yellow_court mult = value:yellow_mod_scale }
	add_modifier = { modifier = pm_gem_blue_court mult = value:blue_mod_scale }
	add_modifier = { modifier = pm_gem_pink_court mult = value:pink_mod_scale }
	add_deposit = d_galaxy_warp
	while = {
		limit = { any_deposit = { is_deposit_type = d_hibernating_lithoids } }
		remove_deposit = d_hibernating_lithoids
	}
	if = {
		limit = {
			NOR = {
				has_building = building_buff_kindergarten1
				has_building = building_buff_kindergarten2
				has_building = building_buff_kindergarten3
			}
		}
		add_building = building_buff_kindergarten2
	}
	while = {
		limit = { num_districts = { type = district_city value < 3 } }
		add_district = district_city
	}
	while = {
		limit = { num_districts = { type = district_generator value < 3 } }
		add_district = district_generator
	}
	while = {
		limit = { num_districts = { type = district_mining value < 4 } }
		add_district = district_mining
	}
	add_building = {
		zone = zone_research_unity
		building = building_gem_spire2
	}
}
update_diamond_court_modifier = {
	if = {
		limit = { has_modifier = pm_gem_white_court }
		remove_modifier = pm_gem_white_court
		add_modifier = { modifier = pm_gem_white_court mult = value:white_mod_scale }
	}
	if = {
		limit = { has_modifier = pm_gem_yellow_court }
		remove_modifier = pm_gem_yellow_court
		add_modifier = { modifier = pm_gem_yellow_court mult = value:yellow_mod_scale }
	}
	if = {
		limit = { has_modifier = pm_gem_blue_court }
		remove_modifier = pm_gem_blue_court
		add_modifier = { modifier = pm_gem_blue_court mult = value:blue_mod_scale }
	}
	if = {
		limit = { has_modifier = pm_gem_pink_court }
		remove_modifier = pm_gem_pink_court
		add_modifier = { modifier = pm_gem_pink_court mult = value:pink_mod_scale }
	}
}
f93_remove_diamond_ruler_flag = {
	remove_country_flag = gem_white_rules
	remove_country_flag = gem_yellow_rules
	remove_country_flag = gem_blue_rules
	remove_country_flag = gem_pink_rules
}

f93_create_humans = {
	if = {
		limit = {
			NOT = { exists = event_target:human_species }
		}
		random_galaxy_species = {
			limit = { is_human_species = yes }
			save_event_target_as = human_species
			save_global_event_target_as = gem_human_species
		}
	}
	if = {
		limit = {
			NOT = { exists = event_target:human_species }
		}
		create_species = {
			name = NAME_Human
			plural = NAME_Human_plural
			class = "HUM"
			portrait = "human"
			homeworld = THIS
			sapient = no
			traits = {
				trait = "trait_adaptive"
				trait = "trait_nomadic"
				trait = "trait_wasteful"
			}
		}
		last_created_species = { save_event_target_as = human_species }
		last_created_species = { save_global_event_target_as = gem_human_species }
	}
	modify_species = {
		species = event_target:gem_human_species
		remove_trait = trait_void_dweller_1
		remove_trait = trait_void_dweller_2
		ideal_planet_class = "pc_continental"
		change_scoped_species = no
		sapient = no
	}
}

f93_make_human_sapient = {
	every_owned_pop_group = {
		limit = { is_human_species = yes }
		modify_species = {
			species = event_target:gem_human_species
			sapient = yes
		}
	}
}
f93_create_human_nation_primitive = {
	create_country = {
		name = random
		type = primitive
		authority = auth_imperial
		civics = {
			civic = civic_secret_of_fire
			civic = civic_the_wheel
		}
		species = event_target:human_species
		ethos = {
			ethic = "ethic_xenophobe"
			ethic = "ethic_fanatic_militarist"
		}
		# origin = "origin_enlightened" # Should only be visible if they become spacefaring
		flag = {
			icon = { category = "pre_ftl" file = "preftl_bronze_age.dds" }
			background = { category = "backgrounds" file = "new_dawn.dds" }
			colors = { "green" "dark_green" "null" "null" }
		}
		day_zero_contact = no

	}
	last_created_country = {
		f93_make_human_sapient = yes
		set_country_flag = bronze_age
		set_pre_ftl_age = bronze_age
		set_graphical_culture = preindustrial_01
	}
	set_owner = last_created_country
	owner = { set_awareness = 0 }
	create_pop = {
		species = event_target:human_species
		ethos = random
		size = @bronze_age_pops
	}
	add_building = building_primitive_dwellings
	add_building = building_stone_palace
}

f93_spawn_sol_system = {
	spawn_system = {
		min_distance = 10
		max_distance = 30
		max_jumps = 0
		hyperlane = yes
		initializer = sol_system_initializer
	}
}
update_global_gem_potential = {
	owner = {
		set_variable = { which = global_geoloid_potential value = 0 }
		every_owned_planet = {
			limit = { is_variable_set = gem_pops_made }
			owner = {
				change_variable = { which = global_geoloid_potential value = prev.value:geoloid_potential }
				subtract_variable = { which = global_geoloid_potential value = prev.gem_pops_made }
			}
		}
	}
}
#finds out how many free jobs exists without a unenployed or civilian gem to fill that job
update_global_gems_to_be_made = {
	owner = {
		set_variable = { which = gems_to_be_made value = 0 }
		every_owned_planet = {
			export_trigger_value_to_variable = {
				trigger = free_jobs
				variable = free_jobs
			}
			owner = {
				export_trigger_value_to_variable = {
					trigger = num_unemployed
					variable = num_unemployed
				}
				change_variable = { which = gems_to_be_made value = prev.free_jobs  }
			}
		}
		subtract_variable = { which = gems_to_be_made value = value:num_gem_pops_civilian }
		subtract_variable = { which = gems_to_be_made value = value:num_gem_unemployed }
	}
}
#divide the gems to be made number equally to all planets that can produce gems in their kindergartens.
update_planet_gems_to_be_made = {
	set_variable = { which = gems_to_be_made_here value = owner.gems_to_be_made }
	owner = {
		set_variable = { which = active_kindergartens value = 0 }
		every_owned_planet = {
			limit = {
				is_variable_set = gem_pops_made
				check_variable = { which = gem_pops_made value < value:geoloid_potential }
			}
			owner = { change_variable = { which = active_kindergartens value = 1 } }
		}
		if = {
			limit = { check_variable = { which = active_kindergartens value < 1 } }
			set_variable = { which = active_kindergartens value = 1 }
		}
	}
	divide_variable = { which = gems_to_be_made_here value = owner.active_kindergartens }
	#limits the number of gems to be made to the geoloid potential
	if = {
		limit = { check_variable = { which = gems_to_be_made_here value > value:geoloid_potential } }
		set_variable = { which = gems_to_be_made_here value = value:geoloid_potential }
	}
}
f93_pink_gets_earth = {
	event_target:gem_planet_earth_event = {
		add_modifier = { modifier = "pm_gem_human_experiment" }
		set_planet_flag = gem_planet_earth_owned_by_pink_pre_era_2
		# assign_leader = event_target:gem_pink_diamond
		if = {
			limit = { NOT = { has_planet_flag = comes_from_court1001 } }
			planet_event = { id = f93_diamond_court.1001 }
		}
		planet_event = { id = gem_off_colors.1000 }
		owner = {
			set_country_flag = pink_got_earth
			remove_country_flag = pink_wants_earth
		}
	}
}